name: Build macOS DMG (LiquidSSH)

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Override version (defaults to tag sans 'v' or 0.0.0-dev)"
        required: false
        default: ""

jobs:
  macos:
    runs-on: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Qt (6.9.2)
        uses: jurplel/install-qt-action@v4
        with:
          version: 6.9.2
          arch: clang_64
          cache: true
          aqtversion: "==3.*"

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2

      - name: Install build tools
        run: |
          brew update
          brew install ninja libssh create-dmg

      - name: Compute VERSION
        id: ver
        shell: bash
        env:
          INPUT_VERSION: ${{ inputs.version }}
        run: |
          set -euo pipefail
          if [[ -n "${INPUT_VERSION}" ]]; then
            ver="${INPUT_VERSION}"
          elif [[ "${GITHUB_REF_TYPE}" == "tag" && "${GITHUB_REF_NAME}" == v* ]]; then
            ver="${GITHUB_REF_NAME#v}"
          else
            ver="0.0.0-dev+${GITHUB_RUN_NUMBER}"
          fi
          echo "VERSION=$ver" | tee -a "$GITHUB_ENV"
          echo "version=$ver" >> "$GITHUB_OUTPUT"

      - name: Configure (Release)
        shell: bash
        run: |
          set -euo pipefail
          # Prefer Qt6_DIR if present; fall back to QT_ROOT_DIR provided by install-qt-action.
          QT_PREFIX="${Qt6_DIR:-${QT_ROOT_DIR}}"
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_PREFIX_PATH="$QT_PREFIX"

      - name: Build (Release)
        run: cmake --build build --parallel

      - name: Package .app with macdeployqt and create DMG
        shell: bash
        run: |
          set -euo pipefail
          APP_BUNDLE="$(find build -maxdepth 2 -name '*.app' | head -n 1)"
          if [[ -z "$APP_BUNDLE" ]]; then
            echo "No .app bundle found in build/. Ensure your CMake target has MACOSX_BUNDLE enabled."
            ls -la build
            exit 1
          fi

          echo "Found app: $APP_BUNDLE"
          # Bundle Qt frameworks & plugins
          macdeployqt "$APP_BUNDLE" -verbose=2

          mkdir -p dist
          DMG_NAME="LiquidSSH-${VERSION}-macOS.dmg"
          create-dmg --overwrite --volname "LiquidSSH ${VERSION}" \
            --app-drop-link 425 200 "$DMG_NAME" "$APP_BUNDLE"
          mv "$DMG_NAME" dist/

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: LiquidSSH-macOS
          path: dist/*.dmg
